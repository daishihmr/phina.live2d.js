phina.namespace(function(){var e=LIVE2DCUBISMCORE.Utils,t=quat.create();phina.define("phina.live2d.MocAsset",{superClass:"phina.asset.Asset",init:function(){this.superInit()},_load:function(e){var t=this,i=new XMLHttpRequest;i.open("GET",this.src),i.responseType="arraybuffer",i.onreadystatechange=function(){if(4===i.readyState&&-1!==[200,201,0].indexOf(i.status)){var a=i.response;t.data=LIVE2DCUBISMCORE.Moc.fromArrayBuffer(a),e(t)}},i.send(null)}}),phina.asset.AssetLoader.assetLoadFunctions["live2d.moc"]=function(e,t){return phina.live2d.MocAsset().load(t)},phina.define("phina.live2d.MotionAsset",{superClass:"phina.asset.File",init:function(){this.superInit()},_load:function(e){phina.util.Flow(function(e){this.superMethod("_load",e)}.bind(this)).then(function(){this.data=LIVE2DCUBISMFRAMEWORK.Animation.fromMotion3Json(this.data),e(this)}.bind(this))}}),phina.asset.AssetLoader.assetLoadFunctions["live2d.motion"]=function(e,t){return phina.live2d.MotionAsset().load({path:t,dataType:"json"})},phina.define("phina.live2d.PhysicsAsset",{superClass:"phina.asset.File",init:function(){this.superInit()}}),phina.asset.AssetLoader.assetLoadFunctions["live2d.physics"]=function(e,t){return phina.live2d.PhysicsAsset().load({path:t,dataType:"json"})},phina.define("phina.live2d.Live2DLayer",{superClass:"phina.display.Layer",init:function(e){this.superInit(e),this.domElement=e.domElement||document.createElement("canvas"),this.domElement.width=this.width,this.domElement.height=this.height;var t=this.domElement.getContext("webgl",{stencil:!0})||this.domElement.getContext("experimental-webgl",{stencil:!0});t.clearColor(0,0,0,0),t.clearDepth(1),t.clearStencil(0),t.enable(t.BLEND),t.enable(t.STENCIL_TEST),t.cullFace(t.BACK),t.viewport(0,0,this.width,this.height),this.gl=t,this.offScreenBuffer=phigl.Framebuffer(t,4096,4096,{magFilter:t.LINEAR,minFilter:t.LINEAR});var i=phigl.VertexShader();i.data=phina.live2d.Live2DLayer.aaVs;var a=phigl.FragmentShader();a.data=phina.live2d.Live2DLayer.aaFs;var s=phigl.Program(t).attach(i).attach(a).link();this.screen=phigl.Drawable(t).setProgram(s).setIndexValues([0,1,2,1,3,2]).declareAttributes("position","uv").setAttributeDataArray([{unitSize:2,data:[-.5,.5,.5,.5,-.5,-.5,.5,-.5]},{unitSize:2,data:[0,1,1,1,0,0,1,0]}]).declareUniforms("mMatrix","vpMatrix","texture","alpha"),this.mMatrix=mat4.create();var n=mat4.lookAt(mat4.create(),[0,0,1],[0,0,0],[0,1,0]),r=mat4.ortho(mat4.create(),0,this.width,this.height,0,.1,1e3);this.vpMatrix=mat4.create(),this.vpMatrix=mat4.multiply(this.vpMatrix,n,this.vpMatrix),this.vpMatrix=mat4.multiply(this.vpMatrix,r,this.vpMatrix)},draw:function(e){var i=this.gl;phigl.Framebuffer.unbind(i),i.clear(i.COLOR_BUFFER_BIT);for(var a=this.children,s=0;s<a.length;s++){var n=a[s];this.offScreenBuffer.bind(),i.viewport(0,0,4096,4096),i.clear(i.COLOR_BUFFER_BIT|i.DEPTH_BUFFER_BIT|i.STENCIL_BUFFER_BIT),this._drawChildren(n),phigl.Framebuffer.unbind(i),i.viewport(0,0,this.width,this.height),mat4.fromRotationTranslationScale(this.mMatrix,quat.fromEuler(t,0,0,n.rotation),[n.x,n.y,0],[4096*n.scaleX,4096*-n.scaleY,1]),this.screen.uniforms.mMatrix.setValue(this.mMatrix),this.screen.uniforms.vpMatrix.setValue(this.vpMatrix),this.screen.uniforms.texture.setValue(0).setTexture(this.offScreenBuffer.texture),this.screen.uniforms.alpha.setValue(a[s]._alpha),this.screen.draw()}i.flush();var r=this.domElement;e.context.drawImage(r,0,0,r.width,r.height,-this.width*this.originX,-this.height*this.originY,this.width,this.height)},_drawChildren:function(e){e.drawWebGL&&e.drawWebGL(this);for(var t=0;t<e.children.length;++t)this._drawChildren(e.children[t])},_static:{aaVs:["attribute vec2 position;","attribute vec2 uv;","uniform mat4 mMatrix;","uniform mat4 vpMatrix;","varying vec2 vUv;","void main(void) {","  vUv = uv;","  gl_Position = vpMatrix * mMatrix * vec4(position, 0.0, 1.0);","}"].join("\n"),aaFs:["precision mediump float;","uniform sampler2D texture;","uniform float alpha;","varying vec2 vUv;","void main(void){","  vec4 c0 = texture2D(texture, vUv);","  gl_FragColor = c0 * vec4(1.0, 1.0, 1.0, alpha);","}"].join("\n")}}),phina.define("phina.live2d.Live2DSprite",{superClass:"phina.app.Object2D",gl:null,coreModel:null,textures:null,animator:null,physicsRig:null,parameters:null,canvasWidth:0,canvasHeight:0,pixelsPerUnit:0,_alpha:1,init:function(e){this.superInit(e),e={}.$safe(e,phina.live2d.Live2DSprite.defaults),this._initCore(e),this._initAnimator(e),this._initParameters(e),this._initPhisics(e),this.$watch("gl",function(){this._initTextures(e),this._initMeshes(e)}),e.gl&&(this.gl=e.gl),this.canvasWidth=this.coreModel.canvasinfo.CanvasWidth,this.canvasHeight=this.coreModel.canvasinfo.CanvasHeight,this.pixelsPerUnit=this.coreModel.canvasinfo.PixelsPerUnit},onadded:function(){var e=function(t){return t.gl?t.gl:e(t.parent)},t=e(this.parent);t&&(this.gl=t)},_initCore:function(e){var t="string"==typeof e.moc?AssetManager.get("live2d.moc",e.moc):e.moc;this.coreModel=LIVE2DCUBISMCORE.Model.fromMoc(t.data),{var t=this.gl;this.textures=e.textures.map(function(e){return phigl.Texture(t,e)})},_initMeshes:function(t){var i=this.gl,a=this.coreModel.drawables,s=this.textures,n=a.ids.length;this.meshes=Array.range(0,n).map(function(t){var n=a.vertexPositions[t],r=a.vertexUvs[t];r=r.slice(0,r.length);for(var h=1;h<r.length;h+=2)r[h]=1-r[h];var o=phigl.Drawable(i).setProgram(phina.live2d.Live2DSprite.getProgram(i)).setIndexValues(a.indices[t]).declareAttributes("vertexPosition","uv").setAttributeDataArray([{unitSize:2,data:n},{unitSize:2,data:r}],i.DYNAMIC_DRAW).declareUniforms("visible","texture","opacity");return o.index=t,o.name=a.ids[t],o.vertexPositions=n,o.uvs=r,o.texture=s[a.textureIndices[t]],o.opacity=a.opacities[t],o.visible=e.hasIsVisibleBit(a.dynamicFlags[t]),o.doubleSided=e.hasIsDoubleSidedBit(a.constantFlags[t]),e.hasBlendAdditiveBit(a.constantFlags[t])?o.blendMode="add":e.hasBlendMultiplicativeBit(a.constantFlags[t])&&(o.blendMode="multiply"),o});for(var r=0;r<n;++r)if(a.maskCounts[r]>0){var h=a.masks[r][0],o=this.meshes[h];o?(o.isMask=!0,this.meshes[r].mask=o.index):}else this.meshes[r].mask=-1;this.orderedMeshes=this.meshes.clone()},_initAnimator:function(e){var t=new LIVE2DCUBISMFRAMEWORK.AnimatorBuilder;e.animatorLayers.forEach(function(e){"string"==typeof e&&(e={name:e}),e={}.$safe(e,phina.live2d.Live2DSprite.animationLayerDefaults),t.addLayer(e.name,e.blender,e.weight)}.bind(this)),this.animator=t.setTarget(this.coreModel).setTimeScale(e.timeScale).build()},_initParameters:function(e){this.parameters=phina.app.Element().addChildTo(this),this.parameters.spec={};var t=this.coreModel.parameters;Array.range(0,t.count).forEach(function(e){var i=t.ids[e],a=t.minimumValues[e],s=t.maximumValues[e];this.parameters.spec[i]={defaultValue:t.defaultValues[e],min:a,max:s},this.parameters.accessor(i,{get:function(){return t.values[e]},set:function(i){t.values[e]=Math.clamp(i,a,s)}})}.bind(this))},_initPhisics:function(e){if(e.physics){var t="string"==typeof e.physics?AssetManager.get("live2d.physics",e.physics):e.physics,i=new LIVE2DCUBISMFRAMEWORK.PhysicsRigBuilder;i.setPhysics3Json(t.data),this.physicsRig=i.setTarget(this.coreModel).setTimeScale(e.timeScale).build()}},isPlaying:function(e){return e=e||"base",this.animator.getLayer(e).isPlaying},play:function(e,t,i){"string"==typeof e&&(e=phina.asset.AssetManager.get("live2d.motion",e).data),t=t||0,i=i||"base",this.animator.getLayer(i).play(e,t)},resume:function(e){return e=e||"base",this.animator.getLayer(e).resume()},pause:function(e){return e=e||"base",this.animator.getLayer(e).pause()},stop:function(e){return e=e||"base",this.animator.getLayer(e).stop()},getCurrentTime:function(e){return e=e||"base",this.animator.getLayer(e).currentTime},setCurrentTime:function(e,t){e=e||"base",this.animator.getLayer(e).currentTime=t},update:function(t){this.animator.updateAndEvaluate(.001*t.deltaTime),this.physicsRig&&this.physicsRig.updateAndEvaluate(.001*t.deltaTime),this.coreModel.update();for(var i=!1,a=this.coreModel.drawables,s=0;s<this.meshes.length;++s){var n=this.meshes[s];n.opacity=a.opacities[s],n.visible=e.hasIsVisibleBit(a.dynamicFlags[s]),e.hasVertexPositionsDidChangeBit(a.dynamicFlags[s])&&(n.vertexPositions=a.vertexPositions[s],n.dirtyVertex=!0),e.hasRenderOrderDidChangeBit(a.dynamicFlags[s])&&(i=!0)}i&&this.orderedMeshes.sort(function(e,t){return a.renderOrders[e.index]-a.renderOrders[t.index]})},_checkAnimationEnd:function(){for(var e of this.animator._layers){var t=e[0],i=e[1];i.isPlaying&&i.currentTime>=i._animation.duration&&(i.currentTime-=i._animation.duration,this.flare("finishAnimation",{layer:t}))}},drawWebGL:function(e){for(var t=this.gl,i=0;i<this.orderedMeshes.length;++i){var a=this.orderedMeshes[i];switch(a.dirtyVertex&&(a.setAttributeDataArray([{unitSize:2,data:a.vertexPositions},{unitSize:2,data:a.uvs}],t.DYNAMIC_DRAW),a.dirtyVertex=!1),a.uniforms.visible.setValue(a.visible?1:0),a.uniforms.texture.setValue(0).setTexture(a.texture),a.uniforms.opacity.setValue(a.opacity),a.blendMode){case"add":case"multiply":t.blendFuncSeparate(t.SRC_ALPHA,t.ONE,t.ONE,t.ONE),t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD);break;default:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE),t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD)}a.isMask?(t.stencilFunc(t.ALWAYS,a.index,-1),t.stencilOp(t.REPLACE,t.REPLACE,t.REPLACE)):-1!=a.mask?(t.stencilFunc(t.EQUAL,a.mask,-1),t.stencilOp(t.KEEP,t.KEEP,t.KEEP)):(t.stencilFunc(t.ALWAYS,0,-1),t.stencilOp(t.KEEP,t.KEEP,t.KEEP)),a.doubleSided?t.disable(t.CULL_FACE):t.enable(t.CULL_FACE),a.draw()}},setAlpha:function(e){return this._alpha=e,this},_accessor:{playing:{get:function(){return this.isPlaying()}},currentTime:{get:function(){return this.getCurrentTime()},set:function(e){this.setCurrentTime(e)}},alpha:{get:function(){return this._alpha},set:function(e){this.setAlpha(e)}}},_static:{defaults:{timeScale:1,animatorLayers:[{name:"base",blender:LIVE2DCUBISMFRAMEWORK.BuiltinAnimationBlenders.OVERRIDE,weight:1}]},animationLayerDefaults:{blender:LIVE2DCUBISMFRAMEWORK.BuiltinAnimationBlenders.OVERRIDE,weight:1},_programCache:{},_vertexShaderCache:{},_fragmentShaderCache:{},getProgram:function(e){var t=phigl.GL.getId(e);return null==this._programCache[t]&&(this._programCache[t]=phigl.Program(e).attach(this.getVertexShader(e)).attach(this.getFragmentShader(e)).link()),this._programCache[t]},getVertexShader:function(e){var t=phigl.GL.getId(e);return null==this._vertexShaderCache[t]&&(this._vertexShaderCache[t]=phigl.VertexShader(),this._vertexShaderCache[t].data=["attribute vec2 vertexPosition;","attribute vec2 uv;","uniform float visible;","varying vec2 vUv;","void main(void) {","  vUv = uv;","  if (visible < 0.5) {","    gl_Position = vec4(0.0);","  } else {","    vec3 pos = vec3(vertexPosition, 1.0);","    gl_Position = vec4(pos, 1.0);","  }","}"].join("\n")),this._vertexShaderCache[t]},getFragmentShader:function(e){var t=phigl.GL.getId(e);return null==this._fragmentShaderCache[t]&&(this._fragmentShaderCache[t]=phigl.FragmentShader(),this._fragmentShaderCache[t].data=["precision mediump float;","uniform sampler2D texture;","uniform float opacity;","varying vec2 vUv;","void main(void) {","  vec4 col = texture2D(texture, vUv) * vec4(1.0, 1.0, 1.0, opacity);","  if (col.a == 0.0) discard;","  gl_FragColor = col;","}"].join("\n")),this._fragmentShaderCache[t]}}})});